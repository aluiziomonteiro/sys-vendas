-- MySQL Script generated by MySQL Workbench
-- Sun Jun  9 16:19:14 2019
-- Model: New Model  Version: 1.0
-- MySQL Workbench Forward Engineering
-- Author: Aluizio MS Júnior

-- ----------------------------------------------
-- Schema db_sys_vendas
-- -----------------------------------------------------
CREATE DATABASE IF NOT EXISTS db_sys_vendas;
USE db_sys_vendas;

-- -----------------------------------------------------
-- Table clientes
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS clientes (
    id INT(11) NOT NULL AUTO_INCREMENT,
    nome VARCHAR(45) NULL DEFAULT NULL,
    sobreNome VARCHAR(45) NULL DEFAULT NULL,
    nascimento DATE NULL DEFAULT NULL,
    pessoa ENUM('FISICA', 'JURIDICA') NULL DEFAULT NULL,
    sexo ENUM('M', 'F') NULL DEFAULT NULL,
    email VARCHAR(45) NULL DEFAULT NULL,
    celular VARCHAR(45) NULL DEFAULT NULL,
    situacao ENUM('ATIVO', 'BLOQUEADO') NULL DEFAULT NULL,
    observacao VARCHAR(45) NULL DEFAULT NULL,
    endereco VARCHAR(45) NULL DEFAULT NULL,
    bairro VARCHAR(45) NULL DEFAULT NULL,
    cidade VARCHAR(45) NULL DEFAULT NULL,
    complemento VARCHAR(45) NULL DEFAULT NULL,
    numero VARCHAR(45) NULL DEFAULT NULL,
    uf VARCHAR(45) NULL DEFAULT NULL,
    cep VARCHAR(45) NULL DEFAULT NULL,
    fone VARCHAR(45) NULL DEFAULT NULL,
    PRIMARY KEY (id)
)  
ENGINE=INNODB
COMMENT='Tabela de clientes';


-- -----------------------------------------------------
-- Table usuarios
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS usuarios (
    id INT(11) NOT NULL AUTO_INCREMENT,
    nome VARCHAR(45) NOT NULL,
    login VARCHAR(45) NOT NULL,
    senha VARCHAR(45) NOT NULL,
    PRIMARY KEY (id)
)  
ENGINE=INNODB;


-- -----------------------------------------------------
-- Table orcamentos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS orcamentos (
  id INT(11) NOT NULL AUTO_INCREMENT,
  fk_cliente INT(11) NULL DEFAULT NULL,
  fk_usuario INT(11) NULL DEFAULT NULL,
  subTotalOrcamento DECIMAL(6,2) NULL DEFAULT NULL,
  descontos DECIMAL(6,2) NULL DEFAULT NULL COMMENT 'Percentual de Desconto',
  totalOrcamento DECIMAL(6,2) NULL DEFAULT NULL,
  dataLancamento DATE NULL DEFAULT NULL,
  totalParcelas INT(11) NULL DEFAULT NULL COMMENT 'total de parcelas',
  parcelasPagas INT(11) NULL DEFAULT NULL COMMENT 'Parcelas que foram pagas',
  parcelasAPagar INT(11) GENERATED ALWAYS AS ((totalParcelas - parcelasPagas)) STORED,
  custo DECIMAL(6,2) NULL DEFAULT NULL,
  PRIMARY KEY (id),
  INDEX fk_orcamento_Usuarios (fk_usuario ASC) VISIBLE,
  INDEX fk_orcamento_clientes_idx (fk_cliente ASC) VISIBLE,
  CONSTRAINT fk_orcamento_clientes
    FOREIGN KEY (fk_cliente)
    REFERENCES clientes (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_orcamento_Usuarios
    FOREIGN KEY (fk_usuario)
    REFERENCES usuarios (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
AUTO_INCREMENT = 163
DEFAULT CHARACTER SET = utf8
COMMENT = 'Tabela de orcamentos';


-- -----------------------------------------------------
-- Table carrinho
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS carrinho (
  fk_orcamento INT(11) NULL DEFAULT NULL,
  produtoNome VARCHAR(30) NULL DEFAULT NULL,
  qtd INT(11) NULL DEFAULT NULL,
  subTotal DECIMAL(6,2) NOT NULL DEFAULT '0.00',
  valorUnid DECIMAL(6,2) NOT NULL DEFAULT '0.00',
  produtoId INT(11) NULL DEFAULT NULL,
  data DATE NULL DEFAULT NULL COMMENT 'Data de lançamento',
  custo DECIMAL(6,2) NOT NULL DEFAULT '0.00' COMMENT 'Pre calculo dos custos.',
  INDEX fk_orcamentoproduto_orcamentos_idx (fk_orcamento ASC) VISIBLE,
  CONSTRAINT fk_orcamento
	FOREIGN KEY (fk_orcamento)
    REFERENCES orcamentos (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
COMMENT = 'Tabela carrinho';


-- -----------------------------------------------------
-- Table categorias
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS categorias (
    id INT(11) NOT NULL AUTO_INCREMENT,
    nome VARCHAR(45) NOT NULL,
    PRIMARY KEY (id)
)  
ENGINE=INNODB 
COMMENT='Tabela de fornecedores';


-- -----------------------------------------------------
-- Table enderecos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS enderecos (
    id INT(11) NOT NULL AUTO_INCREMENT,
    endereco VARCHAR(45) NULL DEFAULT NULL,
    bairro VARCHAR(45) NULL DEFAULT NULL,
    cidade VARCHAR(45) NULL DEFAULT NULL,
    complemento VARCHAR(45) NULL DEFAULT NULL,
    numero VARCHAR(45) NULL DEFAULT NULL,
    uf VARCHAR(2) NULL DEFAULT NULL,
    cep VARCHAR(45) NULL DEFAULT NULL,
    fone VARCHAR(45) NULL DEFAULT NULL,
    observacao VARCHAR(45) NULL DEFAULT NULL,
    PRIMARY KEY (id)
)  
ENGINE=INNODB;


-- -----------------------------------------------------
-- Table enderecos_clientes
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS enderecos_clientes (
  fk_endereco INT(11) NULL DEFAULT NULL,
  fk_cliente INT(11) NULL DEFAULT NULL,
  INDEX fk_ender_clien_cliente_idx (fk_cliente ASC) VISIBLE,
  INDEX fk_ender_client_ender_idx (fk_endereco ASC) VISIBLE,
  CONSTRAINT fk_ender_clien_cliente
    FOREIGN KEY (fk_cliente)
    REFERENCES clientes (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_ender_client_ender
    FOREIGN KEY (fk_endereco)
    REFERENCES enderecos (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
COMMENT = 'Relacao Endereco e clientes';


-- -----------------------------------------------------
-- Table estoques
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS estoques (
  id INT(11) NOT NULL AUTO_INCREMENT,
  qtdEntrada INT(11) NULL DEFAULT '0',
  qtdSaida INT(11) NULL DEFAULT '0',
  qtdMinima INT(11) NULL DEFAULT '0',
  qtdDisponivel INT(11) GENERATED ALWAYS AS ((qtdEntrada - qtdSaida)) VIRTUAL,
  status VARCHAR(10) NULL DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table fornecedores
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS fornecedores (
    id INT(11) NOT NULL AUTO_INCREMENT,
    nome VARCHAR(45) NULL DEFAULT NULL,
    pessoa ENUM('FISICA', 'JURIDICA') NULL DEFAULT NULL,
    cnpjCpf VARCHAR(45) NULL DEFAULT NULL,
    cep VARCHAR(45) NULL DEFAULT NULL,
    endereco VARCHAR(45) NULL DEFAULT NULL,
    bairro VARCHAR(45) NULL DEFAULT NULL,
    cidade VARCHAR(45) NULL DEFAULT NULL,
    complemento VARCHAR(45) NULL DEFAULT NULL,
    uf VARCHAR(2) NULL DEFAULT NULL,
    fone VARCHAR(45) NULL DEFAULT NULL,
    email VARCHAR(45) NULL DEFAULT NULL,
    observacao VARCHAR(45) NULL DEFAULT NULL,
    PRIMARY KEY (id)
)  
ENGINE=INNODB COMMENT='Tabela de fornecedores assoiada a produtos';


-- -----------------------------------------------------
-- Table pagamentos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS pagamentos (
  id INT(11) NOT NULL AUTO_INCREMENT,
  fk_orcamento INT(11) NULL DEFAULT NULL,
  numParcela INT(11) NULL DEFAULT NULL COMMENT 'Total de Prestações',
  valorParcela DECIMAL(6,2) NULL DEFAULT NULL,
  parcelaData DATE NULL DEFAULT NULL,
  status ENUM('A_PAGAR', 'EM_ATRASO', 'QUITADO') NULL DEFAULT NULL,
  PRIMARY KEY (id),
  INDEX fk_pagamentos_orcamentos_idx (fk_orcamento ASC) VISIBLE,
  CONSTRAINT fk_oagamentos_orcamentos
    FOREIGN KEY (fk_orcamento)
    REFERENCES orcamentos (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
AUTO_INCREMENT = 179

COMMENT = 'Tabela de pagamentos associada ao orcamento';


-- -----------------------------------------------------
-- Table produtos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS produtos (
  id INT(11) NOT NULL AUTO_INCREMENT,
  fk_categoria INT(11) NULL DEFAULT NULL,
  fk_estoque INT(11) NULL DEFAULT NULL,
  fk_fornecedor INT(11) NULL DEFAULT NULL,
  nome VARCHAR(45) NULL DEFAULT NULL,
  descricao VARCHAR(45) NULL DEFAULT NULL,
  indicacao VARCHAR(45) NULL DEFAULT NULL,
  volume VARCHAR(45) NULL DEFAULT NULL,
  custoUnid DECIMAL(6,2) NULL DEFAULT NULL,
  sugestaoVenda DECIMAL(6,2) NULL DEFAULT NULL,
  imagem VARCHAR(100) NULL DEFAULT NULL,
  lucro DECIMAL(6,2) NULL DEFAULT NULL,
  percentual DOUBLE NULL DEFAULT NULL,
  PRIMARY KEY (id),
  INDEX fk_produtos_categorias_idx (fk_categoria ASC) VISIBLE,
  INDEX fk_produtos_estoques_idx (fk_estoque ASC) VISIBLE,
  INDEX fk_propdutos_fornecedores_idx (fk_fornecedor ASC) VISIBLE,
  CONSTRAINT fk_produtos_categorias
    FOREIGN KEY (fk_categoria)
    REFERENCES categorias (id),
  CONSTRAINT fk_produtos_estoques
    FOREIGN KEY (fk_estoque)
    REFERENCES estoques (id)
    ON UPDATE SET NULL,
  CONSTRAINT fk_propdutos_fornecedores
    FOREIGN KEY (fk_fornecedor)
    REFERENCES fornecedores (id)
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table Produtos_fornecedores
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS produtos_fornecedores (
  id INT(11) NOT NULL AUTO_INCREMENT,
  fk_produto INT(11) NULL DEFAULT NULL,
  fk_fornecedor INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (id),
  INDEX fk_produtos_id_idx (fk_produto ASC) VISIBLE,
  INDEX fk_fornecedor_id_idx (fk_fornecedor ASC) VISIBLE,
  CONSTRAINT fk_fornecedor_id
    FOREIGN KEY (fk_fornecedor)
    REFERENCES fornecedores (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_produtos_id
    FOREIGN KEY (fk_produto)
    REFERENCES produtos (id)
    ON DELETE CASCADE
    ON UPDATE CASCADE
)
ENGINE = InnoDB
COMMENT = 'Relacionamento entre produtos e fornecedores';

-- -----------------------------------------------------
-- Correção para erro de colunas não agregadas
-- -----------------------------------------------------
set global sql_mode=
'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

set session sql_mode=
'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Insert usuário
-- -----------------------------------------------------

INSERT INTO usuarios(nome, login, senha) VALUES ('Aluizio Monteiro', 'admin', 'admin');
    
  
